\rules {
applyDisj_1 {
  \schemaVar \term Rel1 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (disj(REL,S) ==>)
  \find (in(a,REL) ==>)
  \add (==> in(a,S))
  \heuristics (normalization)
  \displayname "use_disj"
};
applyDisj_2 {
  \schemaVar \term Rel2 REL;
  \schemaVar \term Tuple2 a;
  \schemaVar \term Rel2 S;
  \assumes (disj(REL,S) ==>)
  \find (in(a,REL) ==>)
  \add (==> in(a,S))
  \heuristics (normalization)
  \displayname "use_disj"
};
applyDisj_3 {
  \schemaVar \term Rel3 REL;
  \schemaVar \term Tuple3 a;
  \schemaVar \term Rel3 S;
  \assumes (disj(REL,S) ==>)
  \find (in(a,REL) ==>)
  \add (==> in(a,S))
  \heuristics (normalization)
  \displayname "use_disj"
};
applyDisj_4 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (disj(join1x2(sin(x),REL),S) ==>)
  \find (in(binary(x,a),REL) ==>)
  \add (==> in(a,S))
  \heuristics (normalization)
  \displayname "use_disj"
};
applyDisj_5 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
  \schemaVar \term Rel2 S;
  \assumes (disj(join1x3(sin(x),REL),S) ==>)
  \find (in(ternary(x,a1,a2),REL) ==>)
  \add (==> in(binary(a1,a2),S))
  \heuristics (normalization)
  \displayname "use_disj"
};
applyDisj_6 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (disj(join1x2(sin(y),join1x3(sin(x),REL)),S) ==>)
  \find (in(ternary(x,y,a),REL) ==>)
  \add (==> in(a,S))
  \heuristics (normalization)
  \displayname "use_disj"
};
applyDisj_7 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (disj(join2x1(REL,sin(x)),S) ==>)
  \find (in(binary(a,x),REL) ==>)
  \add (==> in(a,S))
  \heuristics (normalization)
  \displayname "use_disj"
};
applyDisj_8 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
  \schemaVar \term Rel2 S;
  \assumes (disj(join3x1(REL,sin(x)),S) ==>)
  \find (in(ternary(a1,a2,x),REL) ==>)
  \add (==> in(binary(a1,a2),S))
  \heuristics (normalization)
  \displayname "use_disj"
};
applyDisj_9 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (disj(join2x1(join3x1(REL,sin(x)),sin(y)),S) ==>)
  \find (in(ternary(a,y,x),REL) ==>)
  \add (==> in(a,S))
  \heuristics (normalization)
  \displayname "use_disj"
};
applyDisj_10 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (disj(join1x2(sin(y),join3x1(REL,sin(x))),S) ==>)
  \find (in(ternary(y,a,x),REL) ==>)
  \add (==> in(a,S))
  \heuristics (normalization)
  \displayname "use_disj"
};
applyDisj_11 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (disj(join2x1(join1x3(sin(x),REL),sin(y)),S) ==>)
  \find (in(ternary(x,a,y),REL) ==>)
  \add (==> in(a,S))
  \heuristics (normalization)
  \displayname "use_disj"
};
applyDisj__1 {
  \schemaVar \term Rel1 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (disj(S,REL) ==>)
  \find (in(a,REL) ==>)
  \add (==> in(a,S))
  \heuristics (normalization)
  \displayname "use_disj"
};
applyDisj__2 {
  \schemaVar \term Rel2 REL;
  \schemaVar \term Tuple2 a;
  \schemaVar \term Rel2 S;
  \assumes (disj(S,REL) ==>)
  \find (in(a,REL) ==>)
  \add (==> in(a,S))
  \heuristics (normalization)
  \displayname "use_disj"
};
applyDisj__3 {
  \schemaVar \term Rel3 REL;
  \schemaVar \term Tuple3 a;
  \schemaVar \term Rel3 S;
  \assumes (disj(S,REL) ==>)
  \find (in(a,REL) ==>)
  \add (==> in(a,S))
  \heuristics (normalization)
  \displayname "use_disj"
};
applyDisj__4 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (disj(S,join1x2(sin(x),REL)) ==>)
  \find (in(binary(x,a),REL) ==>)
  \add (==> in(a,S))
  \heuristics (normalization)
  \displayname "use_disj"
};
applyDisj__5 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
  \schemaVar \term Rel2 S;
  \assumes (disj(S,join1x3(sin(x),REL)) ==>)
  \find (in(ternary(x,a1,a2),REL) ==>)
  \add (==> in(binary(a1,a2),S))
  \heuristics (normalization)
  \displayname "use_disj"
};
applyDisj__6 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (disj(S,join1x2(sin(y),join1x3(sin(x),REL))) ==>)
  \find (in(ternary(x,y,a),REL) ==>)
  \add (==> in(a,S))
  \heuristics (normalization)
  \displayname "use_disj"
};
applyDisj__7 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (disj(S,join2x1(REL,sin(x))) ==>)
  \find (in(binary(a,x),REL) ==>)
  \add (==> in(a,S))
  \heuristics (normalization)
  \displayname "use_disj"
};
applyDisj__8 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
  \schemaVar \term Rel2 S;
  \assumes (disj(S,join3x1(REL,sin(x))) ==>)
  \find (in(ternary(a1,a2,x),REL) ==>)
  \add (==> in(binary(a1,a2),S))
  \heuristics (normalization)
  \displayname "use_disj"
};
applyDisj__9 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (disj(S,join2x1(join3x1(REL,sin(x)),sin(y))) ==>)
  \find (in(ternary(a,y,x),REL) ==>)
  \add (==> in(a,S))
  \heuristics (normalization)
  \displayname "use_disj"
};
applyDisj__10 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (disj(S,join1x2(sin(y),join3x1(REL,sin(x)))) ==>)
  \find (in(ternary(y,a,x),REL) ==>)
  \add (==> in(a,S))
  \heuristics (normalization)
  \displayname "use_disj"
};
applyDisj__11 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (disj(S,join2x1(join1x3(sin(x),REL),sin(y))) ==>)
  \find (in(ternary(x,a,y),REL) ==>)
  \add (==> in(a,S))
  \heuristics (normalization)
  \displayname "use_disj"
};
applyOne_1 {
  \schemaVar \term Rel1 REL;
  \schemaVar \term Atom a;
  \assumes (in(a,REL), one(REL) ==>)
  \find (REL)
  \sameUpdateLevel
  \replacewith (sin(a))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "replace_with_sin"
};
applyOne_2 {
  \schemaVar \term Rel2 REL;
  \schemaVar \term Tuple2 a;
  \assumes (in(a,REL), one(REL) ==>)
  \find (REL)
  \sameUpdateLevel
  \replacewith (sin2(a))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "replace_with_sin"
};
applyOne_3 {
  \schemaVar \term Rel3 REL;
  \schemaVar \term Tuple3 a;
  \assumes (in(a,REL), one(REL) ==>)
  \find (REL)
  \sameUpdateLevel
  \replacewith (sin3(a))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "replace_with_sin"
};
applyOne_4 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
  \assumes (in(binary(x,a),REL), one(join1x2(sin(x),REL)) ==>)
  \find (join1x2(sin(x),REL))
  \sameUpdateLevel
  \replacewith (sin(a))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "replace_with_sin"
};
applyOne_5 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
  \assumes (in(ternary(x,a1,a2),REL), one(join1x3(sin(x),REL)) ==>)
  \find (join1x3(sin(x),REL))
  \sameUpdateLevel
  \replacewith (sin2(binary(a1,a2)))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "replace_with_sin"
};
applyOne_6 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \assumes (in(ternary(x,y,a),REL), one(join1x2(sin(y),join1x3(sin(x),REL))) ==>)
  \find (join1x2(sin(y),join1x3(sin(x),REL)))
  \sameUpdateLevel
  \replacewith (sin(a))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "replace_with_sin"
};
applyOne_7 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
  \assumes (in(binary(a,x),REL), one(join2x1(REL,sin(x))) ==>)
  \find (join2x1(REL,sin(x)))
  \sameUpdateLevel
  \replacewith (sin(a))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "replace_with_sin"
};
applyOne_8 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
  \assumes (in(ternary(a1,a2,x),REL), one(join3x1(REL,sin(x))) ==>)
  \find (join3x1(REL,sin(x)))
  \sameUpdateLevel
  \replacewith (sin2(binary(a1,a2)))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "replace_with_sin"
};
applyOne_9 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \assumes (in(ternary(a,y,x),REL), one(join2x1(join3x1(REL,sin(x)),sin(y))) ==>)
  \find (join2x1(join3x1(REL,sin(x)),sin(y)))
  \sameUpdateLevel
  \replacewith (sin(a))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "replace_with_sin"
};
applyOne_10 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \assumes (in(ternary(y,a,x),REL), one(join1x2(sin(y),join3x1(REL,sin(x)))) ==>)
  \find (join1x2(sin(y),join3x1(REL,sin(x))))
  \sameUpdateLevel
  \replacewith (sin(a))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "replace_with_sin"
};
applyOne_11 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \assumes (in(ternary(x,a,y),REL), one(join2x1(join1x3(sin(x),REL),sin(y))) ==>)
  \find (join2x1(join1x3(sin(x),REL),sin(y)))
  \sameUpdateLevel
  \replacewith (sin(a))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "replace_with_sin"
};
applyOneMult_1 {
  \schemaVar \term Rel1 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Atom b;
  \assumes (in(a,REL), one(REL) ==>)
  \find (in(b,REL))
  \sameUpdateLevel
  \replacewith (a = b)
  \heuristics (simplify, focusNotInAssumes)
  \displayname "apply_mult_one"
};
applyOneMult_2 {
  \schemaVar \term Rel2 REL;
  \schemaVar \term Tuple2 a;
  \schemaVar \term Tuple2 b;
  \assumes (in(a,REL), one(REL) ==>)
  \find (in(b,REL))
  \sameUpdateLevel
  \replacewith (a = b)
  \heuristics (simplify, focusNotInAssumes)
  \displayname "apply_mult_one"
};
applyOneMult_3 {
  \schemaVar \term Rel3 REL;
  \schemaVar \term Tuple3 a;
  \schemaVar \term Tuple3 b;
  \assumes (in(a,REL), one(REL) ==>)
  \find (in(b,REL))
  \sameUpdateLevel
  \replacewith (a = b)
  \heuristics (simplify, focusNotInAssumes)
  \displayname "apply_mult_one"
};
applyOneMult_4 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Atom b;
  \assumes (in(binary(x,a),REL), one(join1x2(sin(x),REL)) ==>)
  \find (in(binary(x,b),REL))
  \sameUpdateLevel
  \replacewith (a = b)
  \heuristics (simplify, focusNotInAssumes)
  \displayname "apply_mult_one"
};
applyOneMult_5 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
  \schemaVar \term Atom b1, b2;
  \assumes (in(ternary(x,a1,a2),REL), one(join1x3(sin(x),REL)) ==>)
  \find (in(ternary(x,b1,b2),REL))
  \sameUpdateLevel
  \replacewith (binary(a1,a2) = binary(b1,b2))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "apply_mult_one"
};
applyOneMult_6 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Atom b;
  \assumes (in(ternary(x,y,a),REL), one(join1x2(sin(y),join1x3(sin(x),REL))) ==>)
  \find (in(ternary(x,y,b),REL))
  \sameUpdateLevel
  \replacewith (a = b)
  \heuristics (simplify, focusNotInAssumes)
  \displayname "apply_mult_one"
};
applyOneMult_7 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Atom b;
  \assumes (in(binary(a,x),REL), one(join2x1(REL,sin(x))) ==>)
  \find (in(binary(b,x),REL))
  \sameUpdateLevel
  \replacewith (a = b)
  \heuristics (simplify, focusNotInAssumes)
  \displayname "apply_mult_one"
};
applyOneMult_8 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
  \schemaVar \term Atom b1, b2;
  \assumes (in(ternary(a1,a2,x),REL), one(join3x1(REL,sin(x))) ==>)
  \find (in(ternary(b1,b2,x),REL))
  \sameUpdateLevel
  \replacewith (binary(a1,a2) = binary(b1,b2))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "apply_mult_one"
};
applyOneMult_9 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Atom b;
  \assumes (in(ternary(a,y,x),REL), one(join2x1(join3x1(REL,sin(x)),sin(y))) ==>)
  \find (in(ternary(b,y,x),REL))
  \sameUpdateLevel
  \replacewith (a = b)
  \heuristics (simplify, focusNotInAssumes)
  \displayname "apply_mult_one"
};
applyOneMult_10 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Atom b;
  \assumes (in(ternary(y,a,x),REL), one(join1x2(sin(y),join3x1(REL,sin(x)))) ==>)
  \find (in(ternary(y,b,x),REL))
  \sameUpdateLevel
  \replacewith (a = b)
  \heuristics (simplify, focusNotInAssumes)
  \displayname "apply_mult_one"
};
applyOneMult_11 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Atom b;
  \assumes (in(ternary(x,a,y),REL), one(join2x1(join1x3(sin(x),REL),sin(y))) ==>)
  \find (in(ternary(x,b,y),REL))
  \sameUpdateLevel
  \replacewith (a = b)
  \heuristics (simplify, focusNotInAssumes)
  \displayname "apply_mult_one"
};
applyLone_1 {
  \schemaVar \term Rel1 REL;
  \schemaVar \term Atom a;
  \assumes (in(a,REL), lone(REL) ==>)
  \find (REL)
  \sameUpdateLevel
  \replacewith (sin(a))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "replace_with_sin"
};
applyLone_2 {
  \schemaVar \term Rel2 REL;
  \schemaVar \term Tuple2 a;
  \assumes (in(a,REL), lone(REL) ==>)
  \find (REL)
  \sameUpdateLevel
  \replacewith (sin2(a))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "replace_with_sin"
};
applyLone_3 {
  \schemaVar \term Rel3 REL;
  \schemaVar \term Tuple3 a;
  \assumes (in(a,REL), lone(REL) ==>)
  \find (REL)
  \sameUpdateLevel
  \replacewith (sin3(a))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "replace_with_sin"
};
applyLone_4 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
  \assumes (in(binary(x,a),REL), lone(join1x2(sin(x),REL)) ==>)
  \find (join1x2(sin(x),REL))
  \sameUpdateLevel
  \replacewith (sin(a))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "replace_with_sin"
};
applyLone_5 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
  \assumes (in(ternary(x,a1,a2),REL), lone(join1x3(sin(x),REL)) ==>)
  \find (join1x3(sin(x),REL))
  \sameUpdateLevel
  \replacewith (sin2(binary(a1,a2)))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "replace_with_sin"
};
applyLone_6 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \assumes (in(ternary(x,y,a),REL), lone(join1x2(sin(y),join1x3(sin(x),REL))) ==>)
  \find (join1x2(sin(y),join1x3(sin(x),REL)))
  \sameUpdateLevel
  \replacewith (sin(a))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "replace_with_sin"
};
applyLone_7 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
  \assumes (in(binary(a,x),REL), lone(join2x1(REL,sin(x))) ==>)
  \find (join2x1(REL,sin(x)))
  \sameUpdateLevel
  \replacewith (sin(a))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "replace_with_sin"
};
applyLone_8 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
  \assumes (in(ternary(a1,a2,x),REL), lone(join3x1(REL,sin(x))) ==>)
  \find (join3x1(REL,sin(x)))
  \sameUpdateLevel
  \replacewith (sin2(binary(a1,a2)))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "replace_with_sin"
};
applyLone_9 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \assumes (in(ternary(a,y,x),REL), lone(join2x1(join3x1(REL,sin(x)),sin(y))) ==>)
  \find (join2x1(join3x1(REL,sin(x)),sin(y)))
  \sameUpdateLevel
  \replacewith (sin(a))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "replace_with_sin"
};
applyLone_10 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \assumes (in(ternary(y,a,x),REL), lone(join1x2(sin(y),join3x1(REL,sin(x)))) ==>)
  \find (join1x2(sin(y),join3x1(REL,sin(x))))
  \sameUpdateLevel
  \replacewith (sin(a))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "replace_with_sin"
};
applyLone_11 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \assumes (in(ternary(x,a,y),REL), lone(join2x1(join1x3(sin(x),REL),sin(y))) ==>)
  \find (join2x1(join1x3(sin(x),REL),sin(y)))
  \sameUpdateLevel
  \replacewith (sin(a))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "replace_with_sin"
};
applyLoneMult_1 {
  \schemaVar \term Rel1 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Atom b;
  \assumes (in(a,REL), lone(REL) ==>)
  \find (in(b,REL))
  \sameUpdateLevel
  \replacewith (a = b)
  \heuristics (simplify, focusNotInAssumes)
  \displayname "apply_mult_lone"
};
applyLoneMult_2 {
  \schemaVar \term Rel2 REL;
  \schemaVar \term Tuple2 a;
  \schemaVar \term Tuple2 b;
  \assumes (in(a,REL), lone(REL) ==>)
  \find (in(b,REL))
  \sameUpdateLevel
  \replacewith (a = b)
  \heuristics (simplify, focusNotInAssumes)
  \displayname "apply_mult_lone"
};
applyLoneMult_3 {
  \schemaVar \term Rel3 REL;
  \schemaVar \term Tuple3 a;
  \schemaVar \term Tuple3 b;
  \assumes (in(a,REL), lone(REL) ==>)
  \find (in(b,REL))
  \sameUpdateLevel
  \replacewith (a = b)
  \heuristics (simplify, focusNotInAssumes)
  \displayname "apply_mult_lone"
};
applyLoneMult_4 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Atom b;
  \assumes (in(binary(x,a),REL), lone(join1x2(sin(x),REL)) ==>)
  \find (in(binary(x,b),REL))
  \sameUpdateLevel
  \replacewith (a = b)
  \heuristics (simplify, focusNotInAssumes)
  \displayname "apply_mult_lone"
};
applyLoneMult_5 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
  \schemaVar \term Atom b1, b2;
  \assumes (in(ternary(x,a1,a2),REL), lone(join1x3(sin(x),REL)) ==>)
  \find (in(ternary(x,b1,b2),REL))
  \sameUpdateLevel
  \replacewith (binary(a1,a2) = binary(b1,b2))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "apply_mult_lone"
};
applyLoneMult_6 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Atom b;
  \assumes (in(ternary(x,y,a),REL), lone(join1x2(sin(y),join1x3(sin(x),REL))) ==>)
  \find (in(ternary(x,y,b),REL))
  \sameUpdateLevel
  \replacewith (a = b)
  \heuristics (simplify, focusNotInAssumes)
  \displayname "apply_mult_lone"
};
applyLoneMult_7 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Atom b;
  \assumes (in(binary(a,x),REL), lone(join2x1(REL,sin(x))) ==>)
  \find (in(binary(b,x),REL))
  \sameUpdateLevel
  \replacewith (a = b)
  \heuristics (simplify, focusNotInAssumes)
  \displayname "apply_mult_lone"
};
applyLoneMult_8 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
  \schemaVar \term Atom b1, b2;
  \assumes (in(ternary(a1,a2,x),REL), lone(join3x1(REL,sin(x))) ==>)
  \find (in(ternary(b1,b2,x),REL))
  \sameUpdateLevel
  \replacewith (binary(a1,a2) = binary(b1,b2))
  \heuristics (simplify, focusNotInAssumes)
  \displayname "apply_mult_lone"
};
applyLoneMult_9 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Atom b;
  \assumes (in(ternary(a,y,x),REL), lone(join2x1(join3x1(REL,sin(x)),sin(y))) ==>)
  \find (in(ternary(b,y,x),REL))
  \sameUpdateLevel
  \replacewith (a = b)
  \heuristics (simplify, focusNotInAssumes)
  \displayname "apply_mult_lone"
};
applyLoneMult_10 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Atom b;
  \assumes (in(ternary(y,a,x),REL), lone(join1x2(sin(y),join3x1(REL,sin(x)))) ==>)
  \find (in(ternary(y,b,x),REL))
  \sameUpdateLevel
  \replacewith (a = b)
  \heuristics (simplify, focusNotInAssumes)
  \displayname "apply_mult_lone"
};
applyLoneMult_11 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Atom b;
  \assumes (in(ternary(x,a,y),REL), lone(join2x1(join1x3(sin(x),REL),sin(y))) ==>)
  \find (in(ternary(x,b,y),REL))
  \sameUpdateLevel
  \replacewith (a = b)
  \heuristics (simplify, focusNotInAssumes)
  \displayname "apply_mult_lone"
};
subrelTransitive_1 {
  \schemaVar \term Rel1 REL;
  \schemaVar \term Rel1 S;
  \schemaVar \term Rel1 T; 
  \assumes (subrel(S,T) ==>)
  \find (subrel(REL,S) ==>)
  \add (subrel (REL,T) ==>)
  //\heuristics (implications3)
  \displayname "subrel_transitivity"
};
subrelTransitive_2 {
  \schemaVar \term Rel2 REL;
  \schemaVar \term Rel2 S;
  \schemaVar \term Rel2 T; 
  \assumes (subrel(S,T) ==>)
  \find (subrel(REL,S) ==>)
  \add (subrel (REL,T) ==>)
  //\heuristics (implications3)
  \displayname "subrel_transitivity"
};
subrelTransitive_3 {
  \schemaVar \term Rel3 REL;
  \schemaVar \term Rel3 S;
  \schemaVar \term Rel3 T; 
  \assumes (subrel(S,T) ==>)
  \find (subrel(REL,S) ==>)
  \add (subrel (REL,T) ==>)
  //\heuristics (implications3)
  \displayname "subrel_transitivity"
};
applySubrel_1 {
  \schemaVar \term Rel1 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (subrel(REL,S) ==>)
  \find (in(a,REL) ==>)
  \add (in(a,S) ==>)
  \heuristics (implications1)
  \displayname "use_subrel"
};
applySubrel_2 {
  \schemaVar \term Rel2 REL;
  \schemaVar \term Tuple2 a;
  \schemaVar \term Rel2 S;
  \assumes (subrel(REL,S) ==>)
  \find (in(a,REL) ==>)
  \add (in(a,S) ==>)
  \heuristics (implications1)
  \displayname "use_subrel"
};
applySubrel_3 {
  \schemaVar \term Rel3 REL;
  \schemaVar \term Tuple3 a;
  \schemaVar \term Rel3 S;
  \assumes (subrel(REL,S) ==>)
  \find (in(a,REL) ==>)
  \add (in(a,S) ==>)
  \heuristics (implications1)
  \displayname "use_subrel"
};
applySubrel_4 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (subrel(join1x2(sin(x),REL),S) ==>)
  \find (in(binary(x,a),REL) ==>)
  \add (in(a,S) ==>)
  \heuristics (implications1)
  \displayname "use_subrel"
};
applySubrel_5 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
  \schemaVar \term Rel2 S;
  \assumes (subrel(join1x3(sin(x),REL),S) ==>)
  \find (in(ternary(x,a1,a2),REL) ==>)
  \add (in(binary(a1,a2),S) ==>)
  \heuristics (implications1)
  \displayname "use_subrel"
};
applySubrel_6 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (subrel(join1x2(sin(y),join1x3(sin(x),REL)),S) ==>)
  \find (in(ternary(x,y,a),REL) ==>)
  \add (in(a,S) ==>)
  \heuristics (implications1)
  \displayname "use_subrel"
};
applySubrel_7 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (subrel(join2x1(REL,sin(x)),S) ==>)
  \find (in(binary(a,x),REL) ==>)
  \add (in(a,S) ==>)
  \heuristics (implications1)
  \displayname "use_subrel"
};
applySubrel_8 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
  \schemaVar \term Rel2 S;
  \assumes (subrel(join3x1(REL,sin(x)),S) ==>)
  \find (in(ternary(a1,a2,x),REL) ==>)
  \add (in(binary(a1,a2),S) ==>)
  \heuristics (implications1)
  \displayname "use_subrel"
};
applySubrel_9 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (subrel(join2x1(join3x1(REL,sin(x)),sin(y)),S) ==>)
  \find (in(ternary(a,y,x),REL) ==>)
  \add (in(a,S) ==>)
  \heuristics (implications1)
  \displayname "use_subrel"
};
applySubrel_10 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (subrel(join1x2(sin(y),join3x1(REL,sin(x))),S) ==>)
  \find (in(ternary(y,a,x),REL) ==>)
  \add (in(a,S) ==>)
  \heuristics (implications1)
  \displayname "use_subrel"
};
applySubrel_11 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (subrel(join2x1(join1x3(sin(x),REL),sin(y)),S) ==>)
  \find (in(ternary(x,a,y),REL) ==>)
  \add (in(a,S) ==>)
  \heuristics (implications1)
  \displayname "use_subrel"
};
applySubrel2_1 {
  \schemaVar \term Rel1 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (subrel(S,REL) ==>)
  \find (==> in(a,REL))
  \add (==> in(a,S))
  \heuristics (implications2)
  \displayname "use_subrel"
};
applySubrel2_2 {
  \schemaVar \term Rel2 REL;
  \schemaVar \term Tuple2 a;
  \schemaVar \term Rel2 S;
  \assumes (subrel(S,REL) ==>)
  \find (==> in(a,REL))
  \add (==> in(a,S))
  \heuristics (implications2)
  \displayname "use_subrel"
};
applySubrel2_3 {
  \schemaVar \term Rel3 REL;
  \schemaVar \term Tuple3 a;
  \schemaVar \term Rel3 S;
  \assumes (subrel(S,REL) ==>)
  \find (==> in(a,REL))
  \add (==> in(a,S))
  \heuristics (implications2)
  \displayname "use_subrel"
};
applySubrel2_4 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (subrel(S,join1x2(sin(x),REL)) ==>)
  \find (==> in(binary(x,a),REL))
  \add (==> in(a,S))
  \heuristics (implications2)
  \displayname "use_subrel"
};
applySubrel2_5 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
  \schemaVar \term Rel2 S;
  \assumes (subrel(S,join1x3(sin(x),REL)) ==>)
  \find (==> in(ternary(x,a1,a2),REL))
  \add (==> in(binary(a1,a2),S))
  \heuristics (implications2)
  \displayname "use_subrel"
};
applySubrel2_6 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (subrel(S,join1x2(sin(y),join1x3(sin(x),REL))) ==>)
  \find (==> in(ternary(x,y,a),REL))
  \add (==> in(a,S))
  \heuristics (implications2)
  \displayname "use_subrel"
};
applySubrel2_7 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (subrel(S,join2x1(REL,sin(x))) ==>)
  \find (==> in(binary(a,x),REL))
  \add (==> in(a,S))
  \heuristics (implications2)
  \displayname "use_subrel"
};
applySubrel2_8 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
  \schemaVar \term Rel2 S;
  \assumes (subrel(S,join3x1(REL,sin(x))) ==>)
  \find (==> in(ternary(a1,a2,x),REL))
  \add (==> in(binary(a1,a2),S))
  \heuristics (implications2)
  \displayname "use_subrel"
};
applySubrel2_9 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (subrel(S,join2x1(join3x1(REL,sin(x)),sin(y))) ==>)
  \find (==> in(ternary(a,y,x),REL))
  \add (==> in(a,S))
  \heuristics (implications2)
  \displayname "use_subrel"
};
applySubrel2_10 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (subrel(S,join1x2(sin(y),join3x1(REL,sin(x)))) ==>)
  \find (==> in(ternary(y,a,x),REL))
  \add (==> in(a,S))
  \heuristics (implications2)
  \displayname "use_subrel"
};
applySubrel2_11 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 S;
  \assumes (subrel(S,join2x1(join1x3(sin(x),REL),sin(y))) ==>)
  \find (==> in(ternary(x,a,y),REL))
  \add (==> in(a,S))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDiff4_1 {
  \schemaVar \term Rel1 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 T;
  \assumes (subrel(R,diff1(REL,T)) ==>)
  \find (==> in(a,REL))
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDiff4_2 {
  \schemaVar \term Rel2 REL;
  \schemaVar \term Tuple2 a;
  \schemaVar \term Rel2 R;
  \schemaVar \term Rel2 T;
  \assumes (subrel(R,diff2(REL,T)) ==>)
  \find (==> in(a,REL))
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDiff4_3 {
  \schemaVar \term Rel3 REL;
  \schemaVar \term Tuple3 a;
  \schemaVar \term Rel3 R;
  \schemaVar \term Rel3 T;
  \assumes (subrel(R,diff3(REL,T)) ==>)
  \find (==> in(a,REL))
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDiff4_4 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 T;
  \assumes (subrel(R,diff1(join1x2(sin(x),REL),T)) ==>)
  \find (==> in(binary(x,a),REL))
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDiff4_5 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
  \schemaVar \term Rel2 R;
  \schemaVar \term Rel2 T;
  \assumes (subrel(R,diff2(join1x3(sin(x),REL),T)) ==>)
  \find (==> in(ternary(x,a1,a2),REL))
  \add (==> in(binary(a1,a2),R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDiff4_6 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 T;
  \assumes (subrel(R,diff1(join1x2(sin(y),join1x3(sin(x),REL)),T)) ==>)
  \find (==> in(ternary(x,y,a),REL))
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDiff4_7 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 T;
  \assumes (subrel(R,diff1(join2x1(REL,sin(x)),T)) ==>)
  \find (==> in(binary(a,x),REL))
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDiff4_8 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
  \schemaVar \term Rel2 R;
  \schemaVar \term Rel2 T;
  \assumes (subrel(R,diff2(join3x1(REL,sin(x)),T)) ==>)
  \find (==> in(ternary(a1,a2,x),REL))
  \add (==> in(binary(a1,a2),R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDiff4_9 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 T;
  \assumes (subrel(R,diff1(join2x1(join3x1(REL,sin(x)),sin(y)),T)) ==>)
  \find (==> in(ternary(a,y,x),REL))
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDiff4_10 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 T;
  \assumes (subrel(R,diff1(join1x2(sin(y),join3x1(REL,sin(x))),T)) ==>)
  \find (==> in(ternary(y,a,x),REL))
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDiff4_11 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 T;
  \assumes (subrel(R,diff1(join2x1(join1x3(sin(x),REL),sin(y)),T)) ==>)
  \find (==> in(ternary(x,a,y),REL))
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDiff7_1 {
  \schemaVar \term Rel1 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 S;
  \assumes (subrel(R,diff1(S,REL)) ==>)
  \find (in(a,REL) ==>)
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDiff7_2 {
  \schemaVar \term Rel2 REL;
  \schemaVar \term Tuple2 a;
  \schemaVar \term Rel2 R;
  \schemaVar \term Rel2 S;
  \assumes (subrel(R,diff2(S,REL)) ==>)
  \find (in(a,REL) ==>)
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDiff7_3 {
  \schemaVar \term Rel3 REL;
  \schemaVar \term Tuple3 a;
  \schemaVar \term Rel3 R;
  \schemaVar \term Rel3 S;
  \assumes (subrel(R,diff3(S,REL)) ==>)
  \find (in(a,REL) ==>)
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDiff7_4 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 S;
  \assumes (subrel(R,diff1(S,join1x2(sin(x),REL))) ==>)
  \find (in(binary(x,a),REL) ==>)
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDiff7_5 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
  \schemaVar \term Rel2 R;
  \schemaVar \term Rel2 S;
  \assumes (subrel(R,diff2(S,join1x3(sin(x),REL))) ==>)
  \find (in(ternary(x,a1,a2),REL) ==>)
  \add (==> in(binary(a1,a2),R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDiff7_6 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 S;
  \assumes (subrel(R,diff1(S,join1x2(sin(y),join1x3(sin(x),REL)))) ==>)
  \find (in(ternary(x,y,a),REL) ==>)
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDiff7_7 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 S;
  \assumes (subrel(R,diff1(S,join2x1(REL,sin(x)))) ==>)
  \find (in(binary(a,x),REL) ==>)
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDiff7_8 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
  \schemaVar \term Rel2 R;
  \schemaVar \term Rel2 S;
  \assumes (subrel(R,diff2(S,join3x1(REL,sin(x)))) ==>)
  \find (in(ternary(a1,a2,x),REL) ==>)
  \add (==> in(binary(a1,a2),R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDiff7_9 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 S;
  \assumes (subrel(R,diff1(S,join2x1(join3x1(REL,sin(x)),sin(y)))) ==>)
  \find (in(ternary(a,y,x),REL) ==>)
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDiff7_10 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 S;
  \assumes (subrel(R,diff1(S,join1x2(sin(y),join3x1(REL,sin(x))))) ==>)
  \find (in(ternary(y,a,x),REL) ==>)
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDiff7_11 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 S;
  \assumes (subrel(R,diff1(S,join2x1(join1x3(sin(x),REL),sin(y)))) ==>)
  \find (in(ternary(x,a,y),REL) ==>)
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelOverr_1 {
  \schemaVar \term Rel1 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 T;
  \assumes (subrel(overr1(R,REL),T) ==>)
  \find (in(a,REL) ==>)
  \add (in(a,T) ==>)
  \heuristics (implications1)
  \displayname "use_subrel"
};
subrelOverr_2 {
  \schemaVar \term Rel2 REL;
  \schemaVar \term Tuple2 a;
  \schemaVar \term Rel2 R;
  \schemaVar \term Rel2 T;
  \assumes (subrel(overr2(R,REL),T) ==>)
  \find (in(a,REL) ==>)
  \add (in(a,T) ==>)
  \heuristics (implications1)
  \displayname "use_subrel"
};
subrelOverr_3 {
  \schemaVar \term Rel3 REL;
  \schemaVar \term Tuple3 a;
  \schemaVar \term Rel3 R;
  \schemaVar \term Rel3 T;
  \assumes (subrel(overr3(R,REL),T) ==>)
  \find (in(a,REL) ==>)
  \add (in(a,T) ==>)
  \heuristics (implications1)
  \displayname "use_subrel"
};
subrelOverr_4 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 T;
  \assumes (subrel(overr1(R,join1x2(sin(x),REL)),T) ==>)
  \find (in(binary(x,a),REL) ==>)
  \add (in(a,T) ==>)
  \heuristics (implications1)
  \displayname "use_subrel"
};
subrelOverr_5 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
  \schemaVar \term Rel2 R;
  \schemaVar \term Rel2 T;
  \assumes (subrel(overr2(R,join1x3(sin(x),REL)),T) ==>)
  \find (in(ternary(x,a1,a2),REL) ==>)
  \add (in(binary(a1,a2),T) ==>)
  \heuristics (implications1)
  \displayname "use_subrel"
};
subrelOverr_6 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 T;
  \assumes (subrel(overr1(R,join1x2(sin(y),join1x3(sin(x),REL))),T) ==>)
  \find (in(ternary(x,y,a),REL) ==>)
  \add (in(a,T) ==>)
  \heuristics (implications1)
  \displayname "use_subrel"
};
subrelOverr_7 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 T;
  \assumes (subrel(overr1(R,join2x1(REL,sin(x))),T) ==>)
  \find (in(binary(a,x),REL) ==>)
  \add (in(a,T) ==>)
  \heuristics (implications1)
  \displayname "use_subrel"
};
subrelOverr_8 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
  \schemaVar \term Rel2 R;
  \schemaVar \term Rel2 T;
  \assumes (subrel(overr2(R,join3x1(REL,sin(x))),T) ==>)
  \find (in(ternary(a1,a2,x),REL) ==>)
  \add (in(binary(a1,a2),T) ==>)
  \heuristics (implications1)
  \displayname "use_subrel"
};
subrelOverr_9 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 T;
  \assumes (subrel(overr1(R,join2x1(join3x1(REL,sin(x)),sin(y))),T) ==>)
  \find (in(ternary(a,y,x),REL) ==>)
  \add (in(a,T) ==>)
  \heuristics (implications1)
  \displayname "use_subrel"
};
subrelOverr_10 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 T;
  \assumes (subrel(overr1(R,join1x2(sin(y),join3x1(REL,sin(x)))),T) ==>)
  \find (in(ternary(y,a,x),REL) ==>)
  \add (in(a,T) ==>)
  \heuristics (implications1)
  \displayname "use_subrel"
};
subrelOverr_11 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 T;
  \assumes (subrel(overr1(R,join2x1(join1x3(sin(x),REL),sin(y))),T) ==>)
  \find (in(ternary(x,a,y),REL) ==>)
  \add (in(a,T) ==>)
  \heuristics (implications1)
  \displayname "use_subrel"
};
subrelDomRestr5_1 {
  \schemaVar \term Rel1 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 S;
  \assumes (subrel(R,domRestr1(S,REL)) ==>)
  \find (==> in(a,REL))
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDomRestr5_2 {
  \schemaVar \term Rel2 REL;
  \schemaVar \term Tuple2 a;
  \schemaVar \term Rel2 R;
  \schemaVar \term Rel1 S;
  \assumes (subrel(R,domRestr2(S,REL)) ==>)
  \find (==> in(a,REL))
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDomRestr5_3 {
  \schemaVar \term Rel3 REL;
  \schemaVar \term Tuple3 a;
  \schemaVar \term Rel3 R;
  \schemaVar \term Rel1 S;
  \assumes (subrel(R,domRestr3(S,REL)) ==>)
  \find (==> in(a,REL))
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDomRestr5_4 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 S;
  \assumes (subrel(R,domRestr1(S,join1x2(sin(x),REL))) ==>)
  \find (==> in(binary(x,a),REL))
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDomRestr5_5 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
  \schemaVar \term Rel2 R;
  \schemaVar \term Rel1 S;
  \assumes (subrel(R,domRestr2(S,join1x3(sin(x),REL))) ==>)
  \find (==> in(ternary(x,a1,a2),REL))
  \add (==> in(binary(a1,a2),R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDomRestr5_6 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 S;
  \assumes (subrel(R,domRestr1(S,join1x2(sin(y),join1x3(sin(x),REL)))) ==>)
  \find (==> in(ternary(x,y,a),REL))
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDomRestr5_7 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 S;
  \assumes (subrel(R,domRestr1(S,join2x1(REL,sin(x)))) ==>)
  \find (==> in(binary(a,x),REL))
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDomRestr5_8 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
  \schemaVar \term Rel2 R;
  \schemaVar \term Rel1 S;
  \assumes (subrel(R,domRestr2(S,join3x1(REL,sin(x)))) ==>)
  \find (==> in(ternary(a1,a2,x),REL))
  \add (==> in(binary(a1,a2),R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDomRestr5_9 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 S;
  \assumes (subrel(R,domRestr1(S,join2x1(join3x1(REL,sin(x)),sin(y)))) ==>)
  \find (==> in(ternary(a,y,x),REL))
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDomRestr5_10 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 S;
  \assumes (subrel(R,domRestr1(S,join1x2(sin(y),join3x1(REL,sin(x))))) ==>)
  \find (==> in(ternary(y,a,x),REL))
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelDomRestr5_11 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
  \schemaVar \term Rel1 R;
  \schemaVar \term Rel1 S;
  \assumes (subrel(R,domRestr1(S,join2x1(join1x3(sin(x),REL),sin(y)))) ==>)
  \find (==> in(ternary(x,a,y),REL))
  \add (==> in(a,R))
  \heuristics (implications2)
  \displayname "use_subrel"
};
subrelRangeRestr5_1 {
  \schemaVar \term Rel1 REL;
  \schemaVar \term Atom a;
    \schemaVar \term Rel1 R;
    \schemaVar \term Rel1 T;
    \assumes (subrel(R,rangeRestr1(REL,T)) ==>)
    \find (==> in(a,REL))
    \replacewith (==> in(a,R))
    \heuristics (implications2)
    \displayname "use_subrel"
};
subrelRangeRestr5_2 {
  \schemaVar \term Rel2 REL;
  \schemaVar \term Tuple2 a;
    \schemaVar \term Rel2 R;
    \schemaVar \term Rel1 T;
    \assumes (subrel(R,rangeRestr2(REL,T)) ==>)
    \find (==> in(a,REL))
    \replacewith (==> in(a,R))
    \heuristics (implications2)
    \displayname "use_subrel"
};
subrelRangeRestr5_3 {
  \schemaVar \term Rel3 REL;
  \schemaVar \term Tuple3 a;
    \schemaVar \term Rel3 R;
    \schemaVar \term Rel1 T;
    \assumes (subrel(R,rangeRestr3(REL,T)) ==>)
    \find (==> in(a,REL))
    \replacewith (==> in(a,R))
    \heuristics (implications2)
    \displayname "use_subrel"
};
subrelRangeRestr5_4 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
    \schemaVar \term Rel1 R;
    \schemaVar \term Rel1 T;
    \assumes (subrel(R,rangeRestr1(join1x2(sin(x),REL),T)) ==>)
    \find (==> in(binary(x,a),REL))
    \replacewith (==> in(a,R))
    \heuristics (implications2)
    \displayname "use_subrel"
};
subrelRangeRestr5_5 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
    \schemaVar \term Rel2 R;
    \schemaVar \term Rel1 T;
    \assumes (subrel(R,rangeRestr2(join1x3(sin(x),REL),T)) ==>)
    \find (==> in(ternary(x,a1,a2),REL))
    \replacewith (==> in(binary(a1,a2),R))
    \heuristics (implications2)
    \displayname "use_subrel"
};
subrelRangeRestr5_6 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
    \schemaVar \term Rel1 R;
    \schemaVar \term Rel1 T;
    \assumes (subrel(R,rangeRestr1(join1x2(sin(y),join1x3(sin(x),REL)),T)) ==>)
    \find (==> in(ternary(x,y,a),REL))
    \replacewith (==> in(a,R))
    \heuristics (implications2)
    \displayname "use_subrel"
};
subrelRangeRestr5_7 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel2 REL;
  \schemaVar \term Atom a;
    \schemaVar \term Rel1 R;
    \schemaVar \term Rel1 T;
    \assumes (subrel(R,rangeRestr1(join2x1(REL,sin(x)),T)) ==>)
    \find (==> in(binary(a,x),REL))
    \replacewith (==> in(a,R))
    \heuristics (implications2)
    \displayname "use_subrel"
};
subrelRangeRestr5_8 {
  \schemaVar \term Atom x;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a1, a2;
    \schemaVar \term Rel2 R;
    \schemaVar \term Rel1 T;
    \assumes (subrel(R,rangeRestr2(join3x1(REL,sin(x)),T)) ==>)
    \find (==> in(ternary(a1,a2,x),REL))
    \replacewith (==> in(binary(a1,a2),R))
    \heuristics (implications2)
    \displayname "use_subrel"
};
subrelRangeRestr5_9 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
    \schemaVar \term Rel1 R;
    \schemaVar \term Rel1 T;
    \assumes (subrel(R,rangeRestr1(join2x1(join3x1(REL,sin(x)),sin(y)),T)) ==>)
    \find (==> in(ternary(a,y,x),REL))
    \replacewith (==> in(a,R))
    \heuristics (implications2)
    \displayname "use_subrel"
};
subrelRangeRestr5_10 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
    \schemaVar \term Rel1 R;
    \schemaVar \term Rel1 T;
    \assumes (subrel(R,rangeRestr1(join1x2(sin(y),join3x1(REL,sin(x))),T)) ==>)
    \find (==> in(ternary(y,a,x),REL))
    \replacewith (==> in(a,R))
    \heuristics (implications2)
    \displayname "use_subrel"
};
subrelRangeRestr5_11 {
  \schemaVar \term Atom x,y;
  \schemaVar \term Rel3 REL;
  \schemaVar \term Atom a;
    \schemaVar \term Rel1 R;
    \schemaVar \term Rel1 T;
    \assumes (subrel(R,rangeRestr1(join2x1(join1x3(sin(x),REL),sin(y)),T)) ==>)
    \find (==> in(ternary(x,a,y),REL))
    \replacewith (==> in(a,R))
    \heuristics (implications2)
    \displayname "use_subrel"
};
subrelDisj_1 {
  \schemaVar \term Rel1 REL;
  \schemaVar \term Rel1 S;
  \assumes (disj(REL,S) ==>)
  \find (subrel(REL,S) ==>)
  \add (REL = none ==>)
  \heuristics (normalization, noDuplicateApp)
  \displayname "subrel_disjoint"
};
subrelDisj_2 {
  \schemaVar \term Rel2 REL;
  \schemaVar \term Rel2 S;
  \assumes (disj(REL,S) ==>)
  \find (subrel(REL,S) ==>)
  \add (REL = none2 ==>)
  \heuristics (normalization, noDuplicateApp)
  \displayname "subrel_disjoint"
};
subrelDisj_3 {
  \schemaVar \term Rel3 REL;
  \schemaVar \term Rel3 S;
  \assumes (disj(REL,S) ==>)
  \find (subrel(REL,S) ==>)
  \add (REL = none3 ==>)
  \heuristics (normalization, noDuplicateApp)
  \displayname "subrel_disjoint"
};
subrelDisj__1 {
  \schemaVar \term Rel1 REL;
  \schemaVar \term Rel1 S;
  \assumes (disj(S,REL) ==>)
  \find (subrel(REL,S) ==>)
  \add (REL = none ==>)
  \heuristics (normalization, noDuplicateApp)
  \displayname "subrel_disjoint"
};
subrelDisj__2 {
  \schemaVar \term Rel2 REL;
  \schemaVar \term Rel2 S;
  \assumes (disj(S,REL) ==>)
  \find (subrel(REL,S) ==>)
  \add (REL = none2 ==>)
  \heuristics (normalization, noDuplicateApp)
  \displayname "subrel_disjoint"
};
subrelDisj__3 {
  \schemaVar \term Rel3 REL;
  \schemaVar \term Rel3 S;
  \assumes (disj(S,REL) ==>)
  \find (subrel(REL,S) ==>)
  \add (REL = none3 ==>)
  \heuristics (normalization, noDuplicateApp)
  \displayname "subrel_disjoint"
};
obtainUnionSubrel_1 {
  \schemaVar \term Rel1 REL;
  \schemaVar \term Rel1 S;
  \find (union1(REL,S))
  \add (subrel(REL,union1(REL,S)), subrel(S,union1(REL,S)) ==>)
  \heuristics (implications3)
};
obtainUnionSubrel_2 {
  \schemaVar \term Rel2 REL;
  \schemaVar \term Rel2 S;
  \find (union2(REL,S))
  \add (subrel(REL,union2(REL,S)), subrel(S,union2(REL,S)) ==>)
  \heuristics (implications3)
};
obtainUnionSubrel_3 {
  \schemaVar \term Rel3 REL;
  \schemaVar \term Rel3 S;
  \find (union3(REL,S))
  \add (subrel(REL,union3(REL,S)), subrel(S,union3(REL,S)) ==>)
  \heuristics (implications3)
};
obtainDiffSubrel_1 {
  \schemaVar \term Rel1 REL;
  \schemaVar \term Rel1 S;
  \find (diff1(REL,S))
  \add (subrel(diff1(REL,S),REL) ==>)
  \heuristics (implications3)
};
obtainDiffSubrel_2 {
  \schemaVar \term Rel2 REL;
  \schemaVar \term Rel2 S;
  \find (diff2(REL,S))
  \add (subrel(diff2(REL,S),REL) ==>)
  \heuristics (implications3)
};
obtainDiffSubrel_3 {
  \schemaVar \term Rel3 REL;
  \schemaVar \term Rel3 S;
  \find (diff3(REL,S))
  \add (subrel(diff3(REL,S),REL) ==>)
  \heuristics (implications3)
};
obtainInterSubrel_1 {
  \schemaVar \term Rel1 REL;
  \schemaVar \term Rel1 S;
  \find (inter1(REL,S))
  \add (subrel(inter1(REL,S),REL), subrel(inter1(REL,S),S) ==>)
  \heuristics (implications3)
};
obtainInterSubrel_2 {
  \schemaVar \term Rel2 REL;
  \schemaVar \term Rel2 S;
  \find (inter2(REL,S))
  \add (subrel(inter2(REL,S),REL), subrel(inter2(REL,S),S) ==>)
  \heuristics (implications3)
};
obtainInterSubrel_3 {
  \schemaVar \term Rel3 REL;
  \schemaVar \term Rel3 S;
  \find (inter3(REL,S))
  \add (subrel(inter3(REL,S),REL), subrel(inter3(REL,S),S) ==>)
  \heuristics (implications3)
};
obtainOverrSubrel_1 {
  \schemaVar \term Rel1 REL;
  \schemaVar \term Rel1 S;
  \find (overr1(REL,S))
  \add (subrel(S,overr1(REL,S)) ==>)
  \heuristics (implications3)
};
obtainOverrSubrel_2 {
  \schemaVar \term Rel2 REL;
  \schemaVar \term Rel2 S;
  \find (overr2(REL,S))
  \add (subrel(S,overr2(REL,S)) ==>)
  \heuristics (implications3)
};
obtainOverrSubrel_3 {
  \schemaVar \term Rel3 REL;
  \schemaVar \term Rel3 S;
  \find (overr3(REL,S))
  \add (subrel(S,overr3(REL,S)) ==>)
  \heuristics (implications3)
};
obtainDomRestrSubrel_1 {
  \schemaVar \term Rel1 REL;
  \schemaVar \term Rel1 R;        
  \find (domRestr1(R,REL))
  \add (subrel(domRestr1(R,REL),REL) ==>)
  \heuristics (implications3)
};
obtainDomRestrSubrel_2 {
  \schemaVar \term Rel2 REL;
  \schemaVar \term Rel1 R;        
  \find (domRestr2(R,REL))
  \add (subrel(domRestr2(R,REL),REL) ==>)
  \heuristics (implications3)
};
obtainDomRestrSubrel_3 {
  \schemaVar \term Rel3 REL;
  \schemaVar \term Rel1 R;        
  \find (domRestr3(R,REL))
  \add (subrel(domRestr3(R,REL),REL) ==>)
  \heuristics (implications3)
};
obtainRangeRestrSubrel_1 {
  \schemaVar \term Rel1 REL;
  \schemaVar \term Rel1 S;               
  \find (rangeRestr1(REL,S))
  \add (subrel(rangeRestr1(REL,S),REL) ==>)
  \heuristics (implications3)
};
obtainRangeRestrSubrel_2 {
  \schemaVar \term Rel2 REL;
  \schemaVar \term Rel1 S;               
  \find (rangeRestr2(REL,S))
  \add (subrel(rangeRestr2(REL,S),REL) ==>)
  \heuristics (implications3)
};
obtainRangeRestrSubrel_3 {
  \schemaVar \term Rel3 REL;
  \schemaVar \term Rel1 S;               
  \find (rangeRestr3(REL,S))
  \add (subrel(rangeRestr3(REL,S),REL) ==>)
  \heuristics (implications3)
};
oneUnion_1 {
  \schemaVar \term Rel1 REL;
  \schemaVar \term Rel1 S;
  \find (one(union1(REL,S)) ==>)
  \add (lone(REL), lone(S) ==>)
  \heuristics (implications3)
};
oneUnion_2 {
  \schemaVar \term Rel2 REL;
  \schemaVar \term Rel2 S;
  \find (one(union2(REL,S)) ==>)
  \add (lone(REL), lone(S) ==>)
  \heuristics (implications3)
};
oneUnion_3 {
  \schemaVar \term Rel3 REL;
  \schemaVar \term Rel3 S;
  \find (one(union3(REL,S)) ==>)
  \add (lone(REL), lone(S) ==>)
  \heuristics (implications3)
};
oneDominatesLone_1 {
  \schemaVar \term Rel1 REL;
  \assumes (one(REL) ==>)
  \find (lone(REL))
  \replacewith (true)
  \heuristics (simplify)
};
oneDominatesLone_2 {
  \schemaVar \term Rel2 REL;
  \assumes (one(REL) ==>)
  \find (lone(REL))
  \replacewith (true)
  \heuristics (simplify)
};
oneDominatesLone_3 {
  \schemaVar \term Rel3 REL;
  \assumes (one(REL) ==>)
  \find (lone(REL))
  \replacewith (true)
  \heuristics (simplify)
};
}
