\schemaVariables {
    \term Relation R,S,T;
    \term Rel1 R1,S1,T1,U1;
    \term Rel2 R2,S2,T2,U2;
    \term Rel3 R3,S3,T3;
    \term Tuple t;
    \term Atom a,b,c,d,e,f;
    \term Tuple2 a2,b2;
    \term Tuple3 a3,b3;
    \term int n;
    \variables Atom va,vb,vc,vd,ve,vf;
    \variables int vn;
    \variables Tuple vt,vu;
    \variables Tuple2 va2;
    \variables Tuple3 va3;
    \formula phi;
}

\rules {


//////////////////////////////////////////////////
//////////////////////////////////////////////////
// one
//////////////////////////////////////////////////
//////////////////////////////////////////////////
    /*
     * one on left-hand side: obtain element
     */
    oneLeft1 { /* proved */
        \find (one(R1) ==>)
        \varcond (\notFreeIn(va,R1))
        \add (\exists va; in(va,R1) ==>)
        \heuristics (implications2)
        // implications
        \displayname "one_obtain_element"
    };
    oneLeft2 { /* proved */
        \find (one(R2) ==>)
        \varcond (\notFreeIn(va,R2), \notFreeIn(vb,R2))
        \add (\exists va; \exists vb; in(binary(va,vb),R2) ==>)
        \heuristics (implications2)
        // implications
        \displayname "one_obtain_element"
    };
    oneLeft3 { /* proved */
        \find (one(R3) ==>)
        \varcond (\notFreeIn(va,R3), \notFreeIn(vb,R3),
                  \notFreeIn(vc,R3))
        \add (\exists va;
                \exists vb;
                  \exists vc; in(ternary(va,vb,vc),R3) ==>)
        \heuristics (implications2)
        // implications
        \displayname "one_obtain_element"
    };

//    subrelIden { /* proved */
//        \assumes (subrel(R2,iden) ==>)
//        \find (in(binary(a,b),R2) ==>)
//        \add (a = b ==>)
//        \heuristics (implications1)
//        // implications
//        \displayname "use_subrel"
//    };
//////////////////////////////////////////////////
//////////////////////////////////////////////////
// subrel + join
//////////////////////////////////////////////////
//////////////////////////////////////////////////
    subrelJoin1 { /* proved */
        \assumes (subrel(join1x2(R1,S2),T1), in(a,R1) ==>)
        \find (in(binary(a,b),S2) ==>)
        \add (in(b,T1) ==>)
        \heuristics (implications1)
        \displayname "use_subrel"
    };
    subrelJoin2 { /* proved */
        \assumes (subrel(join1x3(R1,S3),T2), in(a,R1) ==>)
        \find (in(ternary(a,b,c),S3) ==>)
        \add (in(binary(b,c),T2) ==>)
        \heuristics (implications1)
        \displayname "use_subrel"
    };
    subrelJoin3 { /* proved */
        \assumes (subrel(join2x2(R2,S2),T2), in(binary(a,b),R2) ==>)
        \find (in(binary(b,c),S2) ==>)
        \add (in(binary(a,c),T2) ==>)
        \heuristics (implications1)
        \displayname "use_subrel"
    };
    subrelJoin4 { /* proved */
        \assumes (subrel(join2x1(R2,S1),T1), in(b,S1) ==>)
        \find (in(binary(a,b),R2) ==>)
        \add (in(a,T1) ==>)
        \heuristics (implications1)
        \displayname "use_subrel"
    };
    subrelJoin5 { /* proved */
        \assumes (subrel(join3x1(R3,S1),T2), in(c,S1) ==>)
        \find (in(ternary(a,b,c),R3) ==>)
        \add (in(binary(a,b),T2) ==>)
        \heuristics (implications1)
        \displayname "use_subrel"
    };
//////////////////////////////////////////////////
//////////////////////////////////////////////////
// subrel + diff
//////////////////////////////////////////////////
//////////////////////////////////////////////////
    subrelDiff1 {
        \assumes (subrel(diff1(R1,S1),T1), in(a,R1) ==>)
        \find (==> in(a,S1))
        \add (in(a,T1) ==>)
        \heuristics (implications1)
        \displayname "use_subrel"
    };
    subrelDiff2 {
        \assumes (subrel(diff2(R2,S2),T2), in(a2,R2) ==>)
        \find (==> in(a2,S2))
        \add (in(a2,T2) ==>)
        \heuristics (implications1)
        \displayname "use_subrel"
    };
    subrelDiff3 {
        \assumes (subrel(diff3(R3,S3),T3), in(a3,R3) ==>)
        \find (==> in(a3,S3))
        \add (in(a3,T3) ==>)
        \heuristics (implications1)
        \displayname "use_subrel"
    };

//////////////////////////////////////////////////
//////////////////////////////////////////////////
// subrel + union
//////////////////////////////////////////////////
//////////////////////////////////////////////////
    subrelUnion4 { /* proved */
        \assumes (subrel(T1,union1(R1,S1)) ==> in(a,R1))
        \find (==> in(a,S1))
        \add (==> in(a,T1))
        \heuristics (implications2)
        // implications
        \displayname "subrel_union"
    };
    subrelUnion5 { /* proved */
        \assumes (subrel(T2,union2(R2,S2)) ==> in(a2,R2))
        \find (==> in(a2,S2))
        \add (==> in(a2,T2))
        \heuristics (implications2)
        // implications
        \displayname "subrel_union"
    };
    subrelUnion6 { /* proved */
        \assumes (subrel(T3,union3(R3,S3)) ==> in(a3,R3))
        \find (==> in(a3,S3))
        \add (==> in(a3,T3))
        \heuristics (implications2)
        // implications
        \displayname "subrel_union"
    };
//////////////////////////////////////////////////
//////////////////////////////////////////////////
// subrel + inter
//////////////////////////////////////////////////
//////////////////////////////////////////////////
    subrelInterLeft1 {
        \assumes (subrel(inter1(R1,S1),T1), in(a,R1) ==>)
        \find (in(a,S1) ==>)
        \add (in(a,T1) ==>)
        \heuristics (implications1)
        \displayname "use_subrel"
    };
    subrelInterLeft2 {
        \assumes (subrel(inter2(R2,S2),T2), in(a2,R2) ==>)
        \find (in(a2,S2) ==>)
        \add (in(a2,T2) ==>)
        \heuristics (implications1)
        \displayname "use_subrel"
    };
    subrelInterLeft3 {
        \assumes (subrel(inter3(R3,S3),T3), in(a3,R3) ==>)
        \find (in(a3,S3) ==>)
        \add (in(a3,T3) ==>)
        \heuristics (implications1)
        \displayname "use_subrel"
    };
//////////////////////////////////////////////////
//////////////////////////////////////////////////
// subrel + overr
//////////////////////////////////////////////////
//////////////////////////////////////////////////
    subrelOverr3 { /* proved */
        \assumes (subrel(R2,overr2(S2,T2)) ==> in(a2,T2))
        \find (==> in(a2,S2))
        \add (==> in(a2,R2))
        \heuristics (implications1)
        \displayname "use_subrel"
    };
    subrelOverr4 { /* proved */
        \assumes (subrel(R3,overr3(S3,T3)) ==> in(a3,T3))
        \find (==> in(a3,S3))
        \add (==> in(a3,R3))
        \heuristics (implications1)
        \displayname "use_subrel"
    };
//////////////////////////////////////////////////
//////////////////////////////////////////////////
// subrel + prod
//////////////////////////////////////////////////
//////////////////////////////////////////////////
    subrelProd1 { /* proved */
        \assumes (subrel(prod1x1(R1,S1),T2), in(b,S1) ==>)
        \find (in(a,R1) ==>)
        \add (in(binary(a,b),T2) ==>)
        \heuristics (implications1)
        \displayname "use_subrel"
    };
    subrelProd2 { /* proved */
        \assumes (subrel(prod1x2(R1,S2),T3), in(binary(b,c),S2) ==>)
        \find (in(a,R1) ==>)
        \add (in(ternary(a,b,c),T3) ==>)
        \heuristics (implications1)
        \displayname "use_subrel"
    };
    subrelProd3 { /* proved */
        \assumes (subrel(prod2x1(R2,S1),T3), in(c,S1) ==>)
        \find (in(binary(a,b),R2) ==>)
        \add (in(ternary(a,b,c),T3) ==>)
        \heuristics (implications1)
        \displayname "use_subrel"
    };
    subrelProd4 { /* proved */
        \assumes (subrel(R2,prod1x1(S1,T1)) ==> in(a,S1))
        \find (in(binary(a,b),R2) ==>)
        \replacewith (false ==>)
        \heuristics (closure)
        \displayname "use_subrel_close"
    };
    subrelProd5 { /* proved */
        \assumes (subrel(R2,prod1x1(S1,T1)) ==> in(b,T1))
        \find (in(binary(a,b),R2) ==>)
        \replacewith (false ==>)
        \heuristics (closure)
        \displayname "use_subrel_close"
    };
    subrelProd6 { /* proved */
        \assumes (subrel(R3,prod1x2(S1,T2)) ==> in(a,S1))
        \find (in(ternary(a,b,c),R3) ==>)
        \replacewith (false ==>)
        \heuristics (closure)
        \displayname "use_subrel_close"
    };
    subrelProd7 { /* proved */
        \assumes (subrel(R3,prod1x2(S1,T2)) ==> in(binary(b,c),T2))
        \find (in(ternary(a,b,c),R3) ==>)
        \replacewith (false ==>)
        \heuristics (closure)
        \displayname "use_subrel_close"
    };
    subrelProd8 { /* proved */
        \assumes (subrel(R3,prod2x1(S2,T1)) ==> in(binary(a,b),S2))
        \find (in(ternary(a,b,c),R3) ==>)
        \replacewith (false ==>)
        \heuristics (closure)
        \displayname "use_subrel_close"
    };
    subrelProd9 { /* proved */
        \assumes (subrel(R3,prod2x1(S2,T1)) ==> in(c,T1))
        \find (in(ternary(a,b,c),R3) ==>)
        \replacewith (false ==>)
        \heuristics (closure)
        \displayname "use_subrel_close"
    };
//////////////////////////////////////////////////
//////////////////////////////////////////////////
// subrel + transp
//////////////////////////////////////////////////
//////////////////////////////////////////////////
    subrelTransp2 { /* proved */
        \assumes (subrel(transp(R2),S2) ==>)
        \find (in(binary(a,b),R2) ==>)
        \add (in(binary(b,a),S2) ==>)
        \heuristics (implications1)
        \displayname "use_subrel"
    };
    subrelTransp3 { /* proved */
        \assumes (subrel(R2,transp(S2)) ==>)
        \find (==> in(binary(a,b),S2))
        \add (==> in(binary(b,a),R2))
        \heuristics (implications2)
        \displayname "use_subrel"
    };
//////////////////////////////////////////////////
//////////////////////////////////////////////////
// subrel + domRestr
//////////////////////////////////////////////////
//////////////////////////////////////////////////
    subrelDomRestr1 { /* proved */
        \assumes (subrel(domRestr2(R1,S2),T2), in(a,R1) ==>)
        \find (in(binary(a,b),S2) ==>)
        \add (in(binary(a,b),T2) ==>)
        \heuristics (implications1)
        \displayname "use_subrel"
    };
    subrelDomRestr2 { /* proved */
        \assumes (subrel(domRestr3(R1,S3),T3), in(a,R1) ==>)
        \find (in(ternary(a,b,c),S3) ==>)
        \add (in(ternary(a,b,c),T3) ==>)
        \heuristics (implications1)
        \displayname "use_subrel"
    };
    subrelDomRestr3 { /* proved */
        \assumes (subrel(R2,domRestr2(S1,T2)) ==> in(a,S1))
        \find (in(binary(a,b),R2) ==>)
        \replacewith (false ==>)
        \heuristics (closure)
        \displayname "use_subrel_close"
    };
    subrelDomRestr4 { /* proved */
        \assumes (subrel(R3,domRestr3(S1,T3)) ==> in(a,S1))
        \find (in(ternary(a,b,c),R3) ==>)
        \replacewith (false ==>)
        \heuristics (closure)
        \displayname "use_subrel_close"
    };
//////////////////////////////////////////////////
//////////////////////////////////////////////////
// subrel + rangeRestr
//////////////////////////////////////////////////
//////////////////////////////////////////////////
    subrelRangeRestr1 { /* proved */
        \assumes (subrel(rangeRestr2(R2,S1),T2), in(b,S1) ==>)
        \find (in(binary(a,b),R2) ==>)
        \add (in(binary(a,b),T2) ==>)
        \heuristics (implications1)
        \displayname "use_subrel"
    };
    subrelRangeRestr2 { /* proved */
        \assumes (subrel(rangeRestr3(R3,S1),T3), in(c,S1) ==>)
        \find (in(ternary(a,b,c),R3) ==>)
        \add (in(ternary(a,b,c),T3) ==>)
        \heuristics (implications1)
        \displayname "use_subrel"
    };
    subrelRangeRestr3 { /* proved */
        \assumes (subrel(R2,rangeRestr2(S2,T1)) ==> in(b,T1))
        \find (in(binary(a,b),R2) ==>)
        \replacewith (false ==>)
        \heuristics (closure)
        \displayname "use_subrel_close"
    };
    subrelRangeRestr4 { /* proved */
        \assumes (subrel(R3,rangeRestr3(S3,T1)) ==> in(c,T1))
        \find (in(ternary(a,b,c),R3) ==>)
        \replacewith (false ==>)
        \heuristics (closure)
        \displayname "use_subrel_close"
    };

//////////////////////////////////////////////////
//////////////////////////////////////////////////
// disj + iden
//////////////////////////////////////////////////
//////////////////////////////////////////////////
//    disjIden { /* proved */
//        \assumes (disj(R2,iden) ==>)
//        \find (in(binary(a,b),R2) ==>)
//        \add (==> a = b)
//        \heuristics (implications2)
//    };
//disjIden_ { 
//    \assumes (disj(iden,R2) ==>)
//    \find (in(binary(a,b),R2) ==>)
//    \add (==> a = b)
//    \heuristics (implications2)
//};

}

